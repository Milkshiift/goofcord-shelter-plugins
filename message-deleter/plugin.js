(function(exports){"use strict";const {util:{log:a},flux:b,http:c,plugin:d}=shelter,ba="5.2.3",ca="https://github.com/victornpb/undiscord",da="https://github.com/victornpb/undiscord/wiki",e="[UNDISCORD]",ea="\n/* undiscord window */\n#undiscord.browser { box-shadow: var(--elevation-stroke), var(--elevation-high); overflow: hidden; }\n#undiscord.container,\n#undiscord .container { background-color: var(--background-secondary); border-radius: 8px; box-sizing: border-box; cursor: default; flex-direction: column; }\n#undiscord .header { background-color: var(--background-tertiary); height: 48px; align-items: center; min-height: 48px; padding: 0 16px; display: flex; color: var(--header-secondary); cursor: grab; }\n#undiscord .header .icon { color: var(--interactive-normal); margin-right: 8px; flex-shrink: 0; width: 24; height: 24; }\n#undiscord .header .icon:hover { color: var(--interactive-hover); }\n#undiscord .header h3 { font-size: 16px; line-height: 20px; font-weight: 500; font-family: var(--font-display); color: var(--header-primary); flex-shrink: 0; margin-right: 16px; }\n#undiscord .spacer { flex-grow: 1; }\n#undiscord .header .vert-divider { width: 1px; height: 24px; background-color: var(--background-modifier-accent); margin-right: 16px; flex-shrink: 0; }\n#undiscord legend,\n#undiscord label { color: var(--header-secondary); font-size: 12px; line-height: 16px; font-weight: 500; text-transform: uppercase; cursor: default; font-family: var(--font-display); margin-bottom: 8px; }\n#undiscord .multiInput { display: flex; align-items: center; font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; }\n#undiscord .multiInput :first-child { flex-grow: 1; }\n#undiscord .multiInput button:last-child { margin-right: 4px; }\n#undiscord .input { font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; padding: 10px; height: 40px; }\n#undiscord fieldset { margin-top: 16px; }\n#undiscord .input-wrapper { display: flex; align-items: center; font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; }\n#undiscord input[type=\"text\"],\n#undiscord input[type=\"search\"],\n#undiscord input[type=\"password\"],\n#undiscord input[type=\"datetime-local\"],\n#undiscord input[type=\"number\"],\n#undiscord input[type=\"range\"] { font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; padding: 10px; height: 40px; }\n#undiscord .divider,\n#undiscord hr { border: none; margin-bottom: 24px; padding-bottom: 4px; border-bottom: 1px solid var(--background-modifier-accent); }\n#undiscord .sectionDescription { margin-bottom: 16px; color: var(--header-secondary); font-size: 14px; line-height: 20px; font-weight: 400; }\n#undiscord a { color: var(--text-link); text-decoration: none; }\n#undiscord .btn,\n#undiscord button { position: relative; display: flex; -webkit-box-pack: center; justify-content: center; -webkit-box-align: center; align-items: center; box-sizing: border-box; background: none; border: none; border-radius: 3px; font-size: 14px; font-weight: 500; line-height: 16px; padding: 2px 16px; user-select: none; /* sizeSmall */     width: 60px; height: 32px; min-width: 60px; min-height: 32px; /* lookFilled colorPrimary */     color: rgb(255, 255, 255); background-color: var(--button-secondary-background); }\n#undiscord .sizeMedium { width: 96px; height: 38px; min-width: 96px; min-height: 38px; }\n#undiscord .sizeMedium.icon { width: 38px; min-width: 38px; }\n#undiscord sup { vertical-align: top; }\n/* lookFilled colorPrimary */\n#undiscord .accent { background-color: var(--brand-experiment); }\n#undiscord .danger { background-color: var(--button-danger-background); }\n#undiscord .positive { background-color: var(--button-positive-background); }\n#undiscord .info { font-size: 12px; line-height: 16px; padding: 8px 10px; color: var(--text-muted); }\n/* Scrollbar */\n#undiscord .scroll::-webkit-scrollbar { width: 8px; height: 8px; }\n#undiscord .scroll::-webkit-scrollbar-corner { background-color: transparent; }\n#undiscord .scroll::-webkit-scrollbar-thumb { background-clip: padding-box; border: 2px solid transparent; border-radius: 4px; background-color: var(--scrollbar-thin-thumb); min-height: 40px; }\n#undiscord .scroll::-webkit-scrollbar-track { border-color: var(--scrollbar-thin-track); background-color: var(--scrollbar-thin-track); border: 2px solid var(--scrollbar-thin-track); }\n/* fade scrollbar */\n#undiscord .scroll::-webkit-scrollbar-thumb,\n#undiscord .scroll::-webkit-scrollbar-track { visibility: hidden; }\n#undiscord .scroll:hover::-webkit-scrollbar-thumb,\n#undiscord .scroll:hover::-webkit-scrollbar-track { visibility: visible; }\n/**** functional classes ****/\n#undiscord.redact .priv { display: none !important; }\n#undiscord.redact x:not(:active) { color: transparent !important; background-color: var(--primary-700) !important; cursor: default; user-select: none; }\n#undiscord.redact x:hover { position: relative; }\n#undiscord.redact x:hover::after { content: \"Redacted information (Streamer mode: ON)\"; position: absolute; display: inline-block; top: -32px; left: -20px; padding: 4px; width: 150px; font-size: 8pt; text-align: center; white-space: pre-wrap; background-color: var(--background-floating); -webkit-box-shadow: var(--elevation-high); box-shadow: var(--elevation-high); color: var(--text-normal); border-radius: 5px; pointer-events: none; }\n#undiscord.redact [priv] { -webkit-text-security: disc !important; }\n#undiscord :disabled { display: none; }\n/**** layout and utility classes ****/\n#undiscord,\n#undiscord * { box-sizing: border-box; }\n#undiscord .col { display: flex; flex-direction: column; }\n#undiscord .row { display: flex; flex-direction: row; align-items: center; }\n#undiscord .mb1 { margin-bottom: 8px; }\n#undiscord .log { margin-bottom: 0.25em; }\n#undiscord .log-debug { color: inherit; }\n#undiscord .log-info { color: #00b0f4; }\n#undiscord .log-verb { color: #72767d; }\n#undiscord .log-warn { color: #faa61a; }\n#undiscord .log-error { color: #f04747; }\n#undiscord .log-success { color: #43b581; }\n",fa="\n/**** Undiscord Button ****/\n#undicord-btn { position: relative; width: auto; height: 24px; margin: 0 8px; cursor: pointer; color: var(--interactive-normal); flex: 0 0 auto; }\n#undicord-btn progress { position: absolute; top: 23px; left: -4px; width: 32px; height: 12px; display: none; }\n#undicord-btn.running { color: var(--button-danger-background) !important; }\n#undicord-btn.running progress { display: block; }\n/**** Undiscord Interface ****/\n#undiscord { position: fixed; z-index: 10000; /* Ensure high z-index */ top: 58px; right: 10px; display: flex; flex-direction: column; width: 800px; height: 80vh; min-width: 610px; max-width: 100vw; min-height: 448px; max-height: 100vh; color: var(--text-normal); border-radius: 4px; background-color: var(--background-secondary); box-shadow: var(--elevation-stroke), var(--elevation-high); will-change: top, left, width, height; }\n#undiscord .header .icon { cursor: pointer; }\n#undiscord .window-body { height: calc(100% - 48px); }\n#undiscord .sidebar { overflow: hidden scroll; overflow-y: auto; width: 270px; min-width: 250px; height: 100%; max-height: 100%; padding: 8px; background: var(--background-secondary); }\n#undiscord .sidebar legend,\n#undiscord .sidebar label { display: block; width: 100%; }\n#undiscord .main { display: flex; max-width: calc(100% - 250px); background-color: var(--background-primary); flex-grow: 1; }\n#undiscord.hide-sidebar .sidebar { display: none; }\n#undiscord.hide-sidebar .main { max-width: 100%; }\n#undiscord #logArea { font-family: Consolas, Liberation Mono, Menlo, Courier, monospace; font-size: 0.75rem; overflow: auto; padding: 10px; user-select: text; flex-grow: 1; flex-grow: 1; cursor: auto; }\n#undiscord .tbar { padding: 8px; background-color: var(--background-secondary-alt); }\n#undiscord .tbar button { margin-right: 4px; margin-bottom: 4px; }\n#undiscord .footer { cursor: se-resize; padding-right: 30px; }\n#undiscord .footer #progressPercent { padding: 0 1em; font-size: small; color: var(--interactive-muted); flex-grow: 1; }\n.resize-handle { position: absolute; bottom: -15px; right: -15px; width: 30px; height: 30px; transform: rotate(-45deg); background: repeating-linear-gradient(0, var(--background-modifier-accent), var(--background-modifier-accent) 1px, transparent 2px, transparent 4px); cursor: nwse-resize; }\n/**** Elements ****/\n#undiscord summary { font-size: 16px; font-weight: 500; line-height: 20px; position: relative; overflow: hidden; margin-bottom: 2px; padding: 6px 10px; cursor: pointer; white-space: nowrap; text-overflow: ellipsis; color: var(--interactive-normal); border-radius: 4px; flex-shrink: 0; }\n#undiscord fieldset { padding-left: 8px; }\n#undiscord legend a { float: right; text-transform: initial; }\n#undiscord progress { height: 8px; margin-top: 4px; flex-grow: 1; }\n#undiscord .importJson { display: flex; flex-direction: row; }\n#undiscord .importJson button { margin-left: 5px; width: fit-content; }\n",ga="\n[name^=\"grab-\"] { position: absolute; --size: 6px; --corner-size: 16px; --offset: -1px; z-index: 9; }\n[name^=\"grab-\"]:hover{ background: rgba(128,128,128,0.1); }\n[name=\"grab-t\"] { top: 0px; left: var(--corner-size); right: var(--corner-size); height: var(--size); margin-top: var(--offset); cursor: ns-resize; }\n[name=\"grab-r\"] { top: var(--corner-size); bottom: var(--corner-size); right: 0px; width: var(--size); margin-right: var(--offset); \n  cursor: ew-resize; }\n[name=\"grab-b\"] { bottom: 0px; left: var(--corner-size); right: var(--corner-size); height: var(--size); margin-bottom: var(--offset); cursor: ns-resize; }\n[name=\"grab-l\"] { top: var(--corner-size); bottom: var(--corner-size); left: 0px; width: var(--size); margin-left: var(--offset); cursor: ew-resize; }\n[name=\"grab-tl\"] { top: 0px; left: 0px; width: var(--corner-size); height: var(--corner-size); margin-top: var(--offset); margin-left: var(--offset); cursor: nwse-resize; }\n[name=\"grab-tr\"] { top: 0px; right: 0px; width: var(--corner-size); height: var(--corner-size); margin-top: var(--offset); margin-right: var(--offset); cursor: nesw-resize; }\n[name=\"grab-br\"] { bottom: 0px; right: 0px; width: var(--corner-size); height: var(--corner-size); margin-bottom: var(--offset); margin-right: var(--offset); cursor: nwse-resize; }\n[name=\"grab-bl\"] { bottom: 0px; left: 0px; width: var(--corner-size); height: var(--corner-size); margin-bottom: var(--offset); margin-left: var(--offset); cursor: nesw-resize; }\n",ha="\n<div id=\"undicord-btn\" tabindex=\"0\" role=\"button\" aria-label=\"Delete Messages\" title=\"Delete Messages with Undiscord\">\n    <svg aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path fill=\"currentColor\" d=\"M15 3.999V2H9V3.999H3V5.999H21V3.999H15Z\"></path>\n        <path fill=\"currentColor\" d=\"M5 6.99902V18.999C5 20.101 5.897 20.999 7 20.999H17C18.103 20.999 19 20.101 19 18.999V6.99902H5ZM11 17H9V11H11V17ZM15 17H13V11H15V17Z\"></path>\n    </svg>\n    <progress></progress>\n</div>\n",ia="\n<div id=\"undiscord\" class=\"browser container redact\" style=\"display:none;\">\n    <div class=\"header\">\n        <svg class=\"icon\" aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M15 3.999V2H9V3.999H3V5.999H21V3.999H15Z\"></path>\n            <path fill=\"currentColor\"\n                d=\"M5 6.99902V18.999C5 20.101 5.897 20.999 7 20.999H17C18.103 20.999 19 20.101 19 18.999V6.99902H5ZM11 17H9V11H11V17ZM15 17H13V11H15V17Z\">\n            </path>\n        </svg>\n        <h3>Undiscord</h3>\n        <div class=\"vert-divider\"></div>\n        <span> Bulk delete messages</span>\n        <div class=\"spacer\"></div>\n        <div id=\"hide\" class=\"icon\" aria-label=\"Close\" role=\"button\" tabindex=\"0\">\n            <svg aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\"\n                    d=\"M18.4 4L12 10.4L5.6 4L4 5.6L10.4 12L4 18.4L5.6 20L12 13.6L18.4 20L20 18.4L13.6 12L20 5.6L18.4 4Z\">\n                </path>\n            </svg>\n        </div>\n    </div>\n    <div class=\"window-body\" style=\"display: flex; flex-direction: row;\">\n        <div class=\"sidebar scroll\">\n            <details open>\n                <summary>General</summary>\n                <fieldset>\n                    <legend>\n                        Author ID\n                        <a href=\"{{WIKI}}/authorId\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"multiInput\">\n                        <div class=\"input-wrapper\">\n                            <input class=\"input\" id=\"authorId\" type=\"text\" priv>\n                        </div>\n                        <button id=\"getAuthor\">me</button>\n                    </div>\n                </fieldset>\n                <hr>\n                <fieldset>\n                    <legend>\n                        Server ID\n                        <a href=\"{{WIKI}}/guildId\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"multiInput\">\n                        <div class=\"input-wrapper\">\n                            <input class=\"input\" id=\"guildId\" type=\"text\" priv>\n                        </div>\n                        <button id=\"getGuild\">current</button>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        Channel ID\n                        <a href=\"{{WIKI}}/channelId\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"multiInput mb1\">\n                        <div class=\"input-wrapper\">\n                            <input class=\"input\" id=\"channelId\" type=\"text\" priv>\n                        </div>\n                        <button id=\"getChannel\">current</button>\n                    </div>\n                    <div class=\"sectionDescription\">\n                        <label class=\"row\"><input id=\"includeNsfw\" type=\"checkbox\">This is a NSFW channel</label>\n                    </div>\n                </fieldset>\n            </details>\n            <details>\n                <summary>Wipe Archive</summary>\n                <fieldset>\n                    <legend>\n                        Import index.json\n                        <a href=\"{{WIKI}}/importJson\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"input-wrapper\">\n                        <input type=\"file\" id=\"importJsonInput\" accept=\"application/json,.json\" style=\"width:100%\";>\n                    </div>\n                    <div class=\"sectionDescription\">\n                        <br>\n                        After requesting your data from discord, you can import it here.<br>\n                        Select the \"messages/index.json\" file from the discord archive.\n                    </div>\n                    <div class=\"sectionDescription\">\n                        <label><input id=\"includeServers\" type=\"checkbox\">Include servers</label>\n                    </div>\n                </fieldset>\n            </details>\n            <hr>\n            <details>\n                <summary>Filter</summary>\n                <fieldset>\n                    <legend>\n                        Search\n                        <a href=\"{{WIKI}}/filters\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"input-wrapper\">\n                        <input id=\"search\" type=\"text\" placeholder=\"Containing text\" priv>\n                    </div>\n                    <div class=\"sectionDescription\">\n                        Only delete messages that contain the text\n                    </div>\n                    <div class=\"sectionDescription\">\n                        <label><input id=\"hasLink\" type=\"checkbox\">has: link</label>\n                    </div>\n                    <div class=\"sectionDescription\">\n                        <label><input id=\"hasFile\" type=\"checkbox\">has: file</label>\n                    </div>\n                    <div class=\"sectionDescription\">\n                        <label><input id=\"includePinned\" type=\"checkbox\" checked>Include pinned</label>\n                    </div>\n                </fieldset>\n                <hr>\n                <fieldset>\n                    <legend>\n                        Pattern\n                        <a href=\"{{WIKI}}/pattern\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"sectionDescription\">\n                        Delete messages that match the regular expression\n                    </div>\n                    <div class=\"input-wrapper\">\n                        <span class=\"info\">/</span>\n                        <input id=\"pattern\" type=\"text\" placeholder=\"regular expression\" priv>\n                        <span class=\"info\">/</span>\n                    </div>\n                </fieldset>\n            </details>\n            <details>\n                <summary>Messages interval</summary>\n                <fieldset>\n                    <legend>\n                        Interval of messages\n                        <a href=\"{{WIKI}}/messageId\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"multiInput mb1\">\n                        <div class=\"input-wrapper\">\n                            <input id=\"minId\" type=\"text\" placeholder=\"After a message\" priv>\n                        </div>\n                        <button id=\"pickMessageAfter\">Pick</button>\n                    </div>\n                    <div class=\"multiInput\">\n                        <div class=\"input-wrapper\">\n                            <input id=\"maxId\" type=\"text\" placeholder=\"Before a message\" priv>\n                        </div>\n                        <button id=\"pickMessageBefore\">Pick</button>\n                    </div>\n                    <div class=\"sectionDescription\">\n                        Specify an interval to delete messages.\n                    </div>\n                </fieldset>\n            </details>\n            <details>\n                <summary>Date interval</summary>\n                <fieldset>\n                    <legend>\n                        After date\n                        <a href=\"{{WIKI}}/dateRange\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"input-wrapper mb1\">\n                        <input id=\"minDate\" type=\"datetime-local\" title=\"Messages posted AFTER this date\">\n                    </div>\n                    <legend>\n                        Before date\n                        <a href=\"{{WIKI}}/dateRange\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"input-wrapper\">\n                        <input id=\"maxDate\" type=\"datetime-local\" title=\"Messages posted BEFORE this date\">\n                    </div>\n                    <div class=\"sectionDescription\">\n                        Delete messages that were posted between the two dates.\n                    </div>\n                    <div class=\"sectionDescription\">\n                        * Filtering by date doesn't work if you use the \"Messages interval\".\n                    </div>\n                </fieldset>\n            </details>\n            <hr>\n            <details>\n                <summary>Advanced settings</summary>\n                <fieldset>\n                    <legend>\n                        Search delay\n                        <a href=\"{{WIKI}}/delay\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"input-wrapper\">\n                        <input id=\"searchDelay\" type=\"range\" value=\"1400\" step=\"100\" min=\"100\" max=\"60000\">\n                        <div id=\"searchDelayValue\"></div>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        Delete delay\n                        <a href=\"{{WIKI}}/delay\" title=\"Help\" target=\"_blank\" rel=\"noopener noreferrer\">help</a>\n                    </legend>\n                    <div class=\"input-wrapper\">\n                        <input id=\"deleteDelay\" type=\"range\" value=\"1400\" step=\"50\" min=\"50\" max=\"10000\">\n                        <div id=\"deleteDelayValue\"></div>\n                    </div>\n                    <br>\n                    <div class=\"sectionDescription\">\n                        This will affect the speed in which the messages are deleted.\n                        Use the help link for more information.\n                    </div>\n                </fieldset>\n                <label><input id=\"rateLimitPrevention\" type=\"checkbox\" checked>Rate limit prevention</label>\n                <!-- Authorization Token Section Removed -->\n            </details>\n            <hr>\n            <div></div>\n            <div class=\"info\">\n                Undiscord {{VERSION}}\n                <br> victornpb\n            </div>\n        </div>\n        <div class=\"main col\">\n            <div class=\"tbar col\">\n                <div class=\"row\">\n                    <button id=\"toggleSidebar\" class=\"sizeMedium icon\">☰</button>\n                    <button id=\"start\" class=\"sizeMedium danger\" style=\"width: 150px;\" title=\"Start the deletion process\">▶︎ Delete</button>\n                    <button id=\"stop\" class=\"sizeMedium\" title=\"Stop the deletion process\" disabled>🛑 Stop</button>\n                    <button id=\"clear\" class=\"sizeMedium\">Clear log</button>\n                    <label class=\"row\" title=\"Hide sensitive information on your screen for taking screenshots\">\n                        <input id=\"redact\" type=\"checkbox\" checked> Streamer mode\n                    </label>\n                </div>\n                <div class=\"row\">\n                    <progress id=\"progressBar\" style=\"display:none;\"></progress>\n                </div>\n            </div>\n            <pre id=\"logArea\" class=\"logarea scroll\">\n                <div class=\"\" style=\"background: var(--background-mentioned); padding: .5em;\">Notice: Undiscord may be working slower than usual and<wbr>require multiple attempts due to a recent Discord update.<br>We're working on a fix, and we thank you for your patience.</div>\n                <center>\n                    <div>Star <a href=\"{{HOME}}\" target=\"_blank\" rel=\"noopener noreferrer\">this project</a> on GitHub!</div>\n                    <div><a href=\"{{HOME}}/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">Issues or help</a></div>\n                </center>\n            </pre>\n            <div class=\"tbar footer row\">\n                <div id=\"progressPercent\"></div>\n                <span class=\"spacer\"></span>\n                <label>\n                    <input id=\"trimLog\" type=\"checkbox\" checked> Trim log\n                </label>\n                <label>\n                    <input id=\"autoScroll\" type=\"checkbox\" checked> Auto scroll\n                </label>\n                <div class=\"resize-handle\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n";let f;const ja=(C)=>f=C,g={debug(){return f?f("debug",arguments):console.debug.apply(console,arguments)},info(){return f?f("info",arguments):console.info.apply(console,arguments)},verb(){return f?f("verb",arguments):console.log.apply(console,arguments)},warn(){return f?f("warn",arguments):console.warn.apply(console,arguments)},error(){return f?f("error",arguments):console.error.apply(console,arguments)},success(){return f?f("success",arguments):console.info.apply(console,arguments)}};let h;const ka="\n  self.addEventListener('message', function(e) {\n    const ms = e.data;\n    setTimeout(() => {\n      self.postMessage('done');\n    }, ms);\n  });\n";function la(){const C=new Blob([ka],{type:"application/javascript"});h=URL.createObjectURL(C)}function ma(){if(h)URL.revokeObjectURL(h),h=null}const i=(C)=>new Promise((D,E)=>{if(!h){g.error("Worker not initialized for wait function!");setTimeout(D,C);return}const F=new Worker(h);let G=Date.now();F.postMessage(C);F.addEventListener("message",function(H){if(H.data==="done"){let I=Date.now()-G-C;if(I>100)g.warn(`This action was delayed ${I}ms more than it should've, make sure you don't have too many tabs open!`);D();F.terminate()}});F.addEventListener("error",(H)=>{g.error("Error in wait worker:",H),E(H),F.terminate()})}),j=(C)=>`${C/36e5|0}h ${C%36e5/6e4|0}m ${C%6e4/1e3|0}s`,na=(C)=>(""+C).replace(/[&<"']/g,(D)=>({"&":"&amp;","<":"&lt;","\"":"&quot;","'":"&#039;"})[D]),k=(C)=>`<x>${na(C)}</x>`,oa=(C)=>C.filter((D)=>D[1]!==void 0).map((D)=>D[0]+"="+encodeURIComponent(D[1])).join("&"),pa=async(C)=>new Promise((D)=>setTimeout(()=>D(window.confirm(C)),10)),l=(C)=>/:/.test(C)?(new Date(C).getTime()-14200704e5)*Math.pow(2,22):C,qa=(C,D,E=!1)=>C.replace(/\{\{([\w_]+)\}\}/g,(F,G)=>D[G]||(E?"":F));var ra=class{options={authorId:null,guildId:null,channelId:null,minId:null,maxId:null,content:null,hasLink:null,hasFile:null,includeNsfw:null,includeServers:null,includePinned:null,pattern:null,searchDelay:1400,deleteDelay:1400,rateLimitPrevention:!0,maxAttempt:2,askForConfirmation:!0};state={running:!1,delCount:0,failCount:0,grandTotal:0,offset:{"asc":0,"desc":0},iterations:0,sortOrder:"asc",searchedPages:0,totalSkippedMessages:0,startEmptyPages:-1,_seachResponse:null,_messagesToDelete:[],_skippedMessages:[]};stats={startTime:new Date(),throttledCount:0,throttledTotalTime:0,lastPing:null,avgPing:null,etr:0};onStart=void 0;onProgress=void 0;onStop=void 0;resetState(){this.state={running:!1,delCount:0,failCount:0,grandTotal:0,offset:{"asc":0,"desc":0},iterations:0,sortOrder:"asc",searchedPages:0,totalSkippedMessages:0,startEmptyPages:-1,_seachResponse:null,_messagesToDelete:[],_skippedMessages:[]},this.options.askForConfirmation=!0}async runBatch(C){if(this.state.running)return g.error("Already running!");g.info(`Runnning batch with queue of ${C.length} jobs`);for(let D=0;D<C.length;D++){const E=C[D];g.info("Starting job...",`(${D+1}/${C.length})`);this.options={...this.options,...E};await this.run(!0);if(!this.state.running)break;g.info("Job ended.",`(${D+1}/${C.length})`);this.resetState();this.options.askForConfirmation=!1;this.state.running=!0}g.info("Batch finished.");this.state.running=!1}async run(C=!1){if(this.state.running&&!C)return g.error("Already running!");this.state.running=!0;this.stats.startTime=new Date();g.success(`\nStarted at ${this.stats.startTime.toLocaleString()}`);if(this.onStart)this.onStart(this.state,this.stats);if(!this.options.guildId)g.verb("Fetching channel info..."),await this.fetchChannelInfo();if(!this.options.guildId&&this.state.running){g.error("Could not determine Guild ID. Stopping.");this.stop();return}if(C&&this.options.guildId!=="@me"&&!this.options.includeServers){g.warn(`Skipping the channel ${this.options.channelId} as it's a server channel.`);return}g.debug(`authorId = "${k(this.options.authorId)}"`,`guildId = "${k(this.options.guildId)}"`,`channelId = "${k(this.options.channelId)}"`,`minId = "${k(this.options.minId)}"`,`maxId = "${k(this.options.maxId)}"`,`hasLink = ${!!this.options.hasLink}`,`hasFile = ${!!this.options.hasFile}`);do {this.state.iterations++;g.verb("Fetching messages...");this.state.sortOrder=this.state.sortOrder=="desc"?"asc":"desc";g.verb(`Set sort order to ${this.state.sortOrder} for this search.`);await this.search();if(!this.state.running)break;this.state.searchedPages++;await this.filterResponse();g.verb(`Grand total: ${this.state.grandTotal}`,`(Messages in current page: ${this.state._seachResponse.messages.length}`,`To be deleted: ${this.state._messagesToDelete.length}`,`Skipped: ${this.state._skippedMessages.length})`,`offset (asc): ${this.state.offset["asc"]}`,`offset (desc): ${this.state.offset["desc"]}`);this.printStats();this.state.totalSkippedMessages+=this.state._skippedMessages.length;this.calcEtr();g.verb(`Estimated time remaining: ${j(this.stats.etr)}`);if(this.state._messagesToDelete.length>0){this.state.startEmptyPages=-1;if(await this.confirm()===!1){this.state.running=!1;break}await this.deleteMessagesFromList()}else if(this.state._skippedMessages.length>0){this.state.startEmptyPages=-1;const D=this.state.offset[this.state.sortOrder];this.state.offset[this.state.sortOrder]+=this.state._skippedMessages.length;g.verb("There's nothing we can delete on this page, checking next page...");g.verb(`Skipped ${this.state._skippedMessages.length} out of ${this.state._seachResponse.messages.length} in this page.`,`(Offset for ${this.state.sortOrder} was ${D}, ajusted to ${this.state.offset[this.state.sortOrder]})`)}else{if(this.state.startEmptyPages==-1)this.state.startEmptyPages=Date.now();if(this.state.searchedPages==1||Date.now()-this.state.startEmptyPages>3e4||this.state.delCount+this.state.failCount+this.state.totalSkippedMessages>=this.state.grandTotal){g.verb("Ended because API returned an empty page.");g.verb("[End state]",this.state);if(C)break;this.state.running=!1}else{const D=1e4;g.verb(`API returned an empty page, waiting an extra ${(D/1e3).toFixed(2)}s before searching again...`);await i(D)}}if(!this.state.running)break;g.verb(`Waiting ${(this.options.searchDelay/1e3).toFixed(2)}s before next page...`);await i(this.options.searchDelay)}while(this.state.running);this.stats.endTime=new Date();g.success(`Ended at ${this.stats.endTime.toLocaleString()}! Total time: ${j(this.stats.endTime.getTime()-this.stats.startTime.getTime())}`);this.printStats();g.debug(`Deleted ${this.state.delCount} messages, ${this.state.failCount} failed.\n`);if(this.onStop)this.onStop(this.state,this.stats)}stop(){if(this.state.running=!1,this.onStop)this.onStop(this.state,this.stats)}calcEtr(){this.stats.etr=(this.options.searchDelay+this.stats.avgPing)*Math.round((this.state.grandTotal-this.state.delCount)/25)+(this.options.deleteDelay+this.stats.avgPing)*(this.state.grandTotal-this.state.delCount)}async confirm(){if(!this.options.askForConfirmation)return!0;g.verb("Waiting for your confirmation...");const C=this.state._messagesToDelete.map((E)=>`${E.author.username}#${E.author.discriminator}: ${E.attachments.length?"[ATTACHMENTS]":E.content}`).join("\n"),D=await pa(`Do you want to delete ~${this.state.grandTotal} messages? (Estimated time: ${j(this.stats.etr)})`+"(The actual number of messages may be less, depending if you're using filters to skip some messages)"+"\n\n---- Preview ----\n"+C);if(!D)return g.error("Aborted by you!"),!1;else return g.verb("OK"),this.options.askForConfirmation=!1,!0}async fetchChannelInfo(){let C;try{await this.beforeRequest(),C=await c.get({url:`/channels/${this.options.channelId}`}),this.afterRequest()}catch(E){return this.state.running=!1,g.error("Channel request threw an error:",E),{}}if(C.status===202){let E=C.body.retry_after;E=!isNaN(E)?E*1e3:this.options.searchDelay;this.stats.throttledCount++;this.stats.throttledTotalTime+=E;g.warn(`This channel isn't indexed yet. Waiting ${E}ms for discord to index it...`);await i(E);return await this.fetchChannelInfo()}if(!C.ok)if(C.status===429){let E=C.body.retry_after;E=!isNaN(E)?E*1e3:this.options.searchDelay;this.stats.throttledCount++;this.stats.throttledTotalTime+=E;g.warn(`Being rate limited by the API for ${E}ms!`);this.printStats();g.verb(`Cooling down for ${E*2}ms before retrying...`);await i(E*2);return await this.fetchChannelInfo()}else return g.error(`Error fetching the channel, API responded with status ${C.status}!\n`,C.body),this.state.running=!1,{};const D=C.body;this.options.guildId=D.guild_id??"@me";return D}async search(){let C;if(this.options.guildId==="@me")C=`/channels/${this.options.channelId}/messages/`;else C=`/guilds/${this.options.guildId}/messages/`;const D=[["author_id",this.options.authorId||void 0],["channel_id",(this.options.guildId!=="@me"?this.options.channelId:void 0)||void 0],["min_id",this.options.minId?l(this.options.minId):void 0],["max_id",this.options.maxId?l(this.options.maxId):void 0],["sort_by","timestamp"],["sort_order",this.state.sortOrder],["offset",this.state.offset[this.state.sortOrder]],["content",this.options.content||void 0],["include_nsfw",this.options.includeNsfw?!0:void 0]];if(this.options.hasLink)D.push(["has","link"]);if(this.options.hasFile)D.push(["has","file"]);const E=oa(D);let F;try{await this.beforeRequest(),F=await c.get({url:`${C}search?${E}`}),this.afterRequest()}catch(H){return this.state.running=!1,g.error("Search request threw an error:",H),this.state._seachResponse={messages:[],total_results:0},this.state._seachResponse}if(F.status===202){let H=F.body.retry_after;H=!isNaN(H)?H*1e3:this.options.searchDelay;this.stats.throttledCount++;this.stats.throttledTotalTime+=H;g.warn(`This channel isn't indexed yet. Waiting ${H}ms for discord to index it...`);await i(H);return await this.search()}if(!F.ok)if(F.status===429){let H=F.body.retry_after;H=!isNaN(H)?H*1e3:this.options.searchDelay;this.stats.throttledCount++;this.stats.throttledTotalTime+=H;g.warn(`Being rate limited by the API for ${H}ms!`);this.printStats();g.verb(`Cooling down for ${H*2}ms before retrying...`);await i(H*2);return await this.search()}else return g.error(`Error searching messages, API responded with status ${F.status}!\n`,F.body),this.state._seachResponse={messages:[],total_results:0},this.state.running=!1,this.state._seachResponse;const G=F.body;G.messages=G.messages||[];G.total_results=G.total_results||0;this.state._seachResponse=G;g.debug(e,"search",G);return G}async filterResponse(){const C=this.state._seachResponse;if(!C||!C.messages){g.error("FilterResponse: _seachResponse or messages is undefined.",C);this.state._messagesToDelete=[];this.state._skippedMessages=[];return}const D=C.total_results;if(D>this.state.grandTotal)this.state.grandTotal=D;const E=C.messages.map((H)=>H.find((I)=>I.hit===!0)).filter(Boolean);let F=E;F=F.filter((H)=>H.type===0||H.type>=6&&H.type<=21);F=F.filter((H)=>H.pinned?this.options.includePinned:!0);try{if(this.options.pattern){const H=new RegExp(this.options.pattern,"i");F=F.filter((I)=>H.test(I.content))}}catch(H){g.warn("Ignoring RegExp because pattern is malformed!",H)}const G=E.filter((H)=>!F.find((I)=>I.id===H.id));this.state._messagesToDelete=F;this.state._skippedMessages=G;g.debug(e,"filterResponse",this.state)}async deleteMessagesFromList(){for(let C=0;C<this.state._messagesToDelete.length;C++){const D=this.state._messagesToDelete[C];if(!this.state.running)return g.error("Stopped by you!");g.debug(`[${this.state.delCount+1}/${this.state.grandTotal}] `+`<sup>${new Date(D.timestamp).toLocaleString()}</sup> `+`<b>${k(D.author.username+"#"+D.author.discriminator)}</b>`+`: <i>${k(D.content).replace(/\n/g,"↵")}</i>`+(D.attachments.length?k(JSON.stringify(D.attachments)):""),`<sup>{ID:${k(D.id)}}</sup>`);let E=0;while(E<this.options.maxAttempt){const F=await this.deleteMessage(D);if(F==="RETRY")E++,g.verb(`Retrying in ${this.options.deleteDelay}ms... (${E}/${this.options.maxAttempt})`),await i(this.options.deleteDelay);else break}this.calcEtr();if(this.onProgress)this.onProgress(this.state,this.stats);await i(this.options.deleteDelay)}}async deleteMessage(C){const D=`/channels/${C.channel_id}/messages/${C.id}`;let E;try{await this.beforeRequest(),E=await c.del({url:D}),this.afterRequest()}catch(F){return g.error("Delete request throwed an error:",F),g.verb("Related object:",k(JSON.stringify(C))),this.state.failCount++,"FAILED"}if(!E.ok)if(E.status===429){let F=E.body.retry_after;F=!isNaN(F)?F*1e3:this.options.deleteDelay;this.stats.throttledCount++;this.stats.throttledTotalTime+=F;g.warn(`Being rate limited by the API for ${F}ms!`);this.printStats();g.verb(`Cooling down for ${F*2}ms before retrying...`);await i(F*2);return"RETRY"}else{let F=E.body,G;if(typeof F==="string")try{G=JSON.parse(F)}catch(H){}else G=F;if(G&&E.status===400&&G.code===50083)return g.warn("Error deleting message (Thread is archived). Will increment offset so we don't search this in the next page..."),this.state.offset[this.state.sortOrder]++,this.state.failCount++,"FAIL_SKIP";g.error(`Error deleting message, API responded with status ${E.status}!`,G||F);g.verb("Related object:",k(JSON.stringify(C)));this.state.failCount++;return"FAILED"}this.state.delCount++;return"OK"}#beforeTs=0;#requestLog=[];async beforeRequest(){this.#requestLog.push(Date.now());this.#requestLog=this.#requestLog.filter((C)=>Date.now()-C<6e4);if(this.options.rateLimitPrevention){let C=[[45,60],[4,5]];for(let [D,E]of C)if(this.#requestLog.length>=D&&Date.now()-this.#requestLog[this.#requestLog.length-D]<E*1e3){let F=E*1e3-(Date.now()-this.#requestLog[this.#requestLog.length-D]);F=F*1.15+300;g.verb(`Delaying for an extra ${(F/1e3).toFixed(2)}s to avoid rate limits...`);await new Promise((G)=>setTimeout(G,F));break}}this.#beforeTs=Date.now()}afterRequest(){this.stats.lastPing=Date.now()-this.#beforeTs,this.stats.avgPing=this.stats.avgPing>0?this.stats.avgPing*.9+this.stats.lastPing*.1:this.stats.lastPing}printStats(){g.verb(`Delete delay: ${this.options.deleteDelay}ms, Search delay: ${this.options.searchDelay}ms`,`Last Ping: ${this.stats.lastPing}ms, Average Ping: ${this.stats.avgPing|0}ms`),g.verb(`Rate Limited: ${this.stats.throttledCount} times.`,`Total time throttled: ${j(this.stats.throttledTotalTime)}.`)}};const m=0,n=1,o=2,p=4,q=8,sa=n+p,ta=n+q,ua=o+p,va=o+q;var wa=class{constructor({elm:C,moveHandle:D,options:E}){if(this.options=t({enabledDrag:!0,enabledResize:!0,minWidth:200,maxWidth:Infinity,minHeight:100,maxHeight:Infinity,dragAllowX:!0,dragAllowY:!0,resizeAllowX:!0,resizeAllowY:!0,draggingClass:"drag",useMouseEvents:!0,useTouchEvents:!0,createHandlers:!0},E),Object.assign(this,E),C.style.position="fixed",this.drag_m=new r(C,D,m,this.options),this.options.createHandlers)this.el_t=s("div",{name:"grab-t"},C),this.drag_t=new r(C,this.el_t,n,this.options),this.el_r=s("div",{name:"grab-r"},C),this.drag_r=new r(C,this.el_r,q,this.options),this.el_b=s("div",{name:"grab-b"},C),this.drag_b=new r(C,this.el_b,o,this.options),this.el_l=s("div",{name:"grab-l"},C),this.drag_l=new r(C,this.el_l,p,this.options),this.el_tl=s("div",{name:"grab-tl"},C),this.drag_tl=new r(C,this.el_tl,sa,this.options),this.el_tr=s("div",{name:"grab-tr"},C),this.drag_tr=new r(C,this.el_tr,ta,this.options),this.el_br=s("div",{name:"grab-br"},C),this.drag_br=new r(C,this.el_br,va,this.options),this.el_bl=s("div",{name:"grab-bl"},C),this.drag_bl=new r(C,this.el_bl,ua,this.options)}},r=class{constructor(C,D,E,F){Object.assign(this,F);this._targetElm=C;this._handleElm=D;let G=window.innerWidth,H=window.innerHeight,I,J,K,L,M,N;const O=(V,W,X)=>V<W?W:V>X?X:V,P=(V,W)=>{const X=V-I,Y=W-J,Z=O(K+Y,0,H-N),$=O(L+X,0,G-M);this._targetElm.style.top=Z+"px";this._targetElm.style.left=$+"px"},Q=(V,W)=>{V=O(V,0,G);W=O(W,0,H);const X=V-I,Y=W-J,Z=E&p?-1:1,$=E&n?-1:1,Ga=this.maxWidth-M,Ha=this.minWidth-M,Ia=this.maxHeight-N,Ja=this.minHeight-N,Ka=K+O(Y*$,Ja,Ia)*$,La=L+O(X*Z,Ha,Ga)*Z,Ma=M+O(X*Z,Ha,Ga),_=N+O(Y*$,Ja,Ia);if(E&n)this._targetElm.style.top=Ka+"px",this._targetElm.style.height=_+"px";if(E&o)this._targetElm.style.height=_+"px";if(E&p)this._targetElm.style.left=La+"px",this._targetElm.style.width=Ma+"px";if(E&q)this._targetElm.style.width=Ma+"px"};let R=E===m?P:Q;function S(V){const W=V.type==="touchstart";if(V.buttons===1||V.which===1||W){V.preventDefault();const X=W?V.touches[0].clientX:V.clientX,Y=W?V.touches[0].clientY:V.clientY;I=X;J=Y;G=window.innerWidth;H=window.innerHeight;K=this._targetElm.offsetTop;L=this._targetElm.offsetLeft;M=this._targetElm.clientWidth;N=this._targetElm.clientHeight;if(this.useMouseEvents)document.addEventListener("mousemove",this._dragMoveHandler),document.addEventListener("mouseup",this._dragEndHandler);if(this.useTouchEvents)document.addEventListener("touchmove",this._dragMoveHandler,{passive:!1}),document.addEventListener("touchend",this._dragEndHandler);this._targetElm.classList.add(this.draggingClass)}}function T(V){V.preventDefault();let W,X;const Y=V.type==="touchmove";if(Y){const Z=V.touches[0];W=Z.clientX;X=Z.clientY}else{if((V.buttons||V.which)!==1){this._dragEndHandler();return}W=V.clientX;X=V.clientY}R(W,X)}function U(V){if(this.useMouseEvents)document.removeEventListener("mousemove",this._dragMoveHandler),document.removeEventListener("mouseup",this._dragEndHandler);if(this.useTouchEvents)document.removeEventListener("touchmove",this._dragMoveHandler),document.removeEventListener("touchend",this._dragEndHandler);this._targetElm.classList.remove(this.draggingClass)}this._dragStartHandler=S.bind(this);this._dragMoveHandler=T.bind(this);this._dragEndHandler=U.bind(this);this.enable()}enable(){this.destroy();if(this.useMouseEvents)this._handleElm.addEventListener("mousedown",this._dragStartHandler);if(this.useTouchEvents)this._handleElm.addEventListener("touchstart",this._dragStartHandler,{passive:!1})}destroy(){this._targetElm.classList.remove(this.draggingClass);if(this.useMouseEvents)this._handleElm.removeEventListener("mousedown",this._dragStartHandler),document.removeEventListener("mousemove",this._dragMoveHandler),document.removeEventListener("mouseup",this._dragEndHandler);if(this.useTouchEvents)this._handleElm.removeEventListener("touchstart",this._dragStartHandler),document.removeEventListener("touchmove",this._dragMoveHandler),document.removeEventListener("touchend",this._dragEndHandler)}};function s(C="div",D,E){const F=document.createElement(C);if(D)Object.entries(D).forEach(([G,H])=>F.setAttribute(G,H));if(E)E.appendChild(F);return F}function t(C,D){function E(G){return G!==null&&typeof G==="object"}function F(G,H){return Object.prototype.hasOwnProperty.call(G,H)}if(E(D)){for(let G in C)if(F(C,G)&&F(D,G)&&D[G]!==void 0)if(E(C[G]))t(C[G],D[G]);else C[G]=D[G]}return C}function xa(C){const D=document.createElement("div");D.innerHTML=C;return D.removeChild(D.firstElementChild)}const ya="\nbody.undiscord-pick-message [data-list-id=\"chat-messages\"] { /* ... same as original ... */\n  background-color: var(--background-secondary-alt);\n  box-shadow: inset 0 0 0px 2px var(--button-outline-brand-border);\n}\nbody.undiscord-pick-message [id^=\"message-content-\"]:hover { cursor: pointer; cursor: cell; background: var(--background-message-automod-hover); }\nbody.undiscord-pick-message [id^=\"message-content-\"]:hover::after { position: absolute; top: calc(50% - 11px); left: 4px; z-index: 1; width: 65px; height: 22px; line-height: 22px; font-family: var(--font-display); background-color: var(--button-secondary-background); color: var(--header-secondary); font-size: 12px; font-weight: 500; text-transform: uppercase; text-align: center; border-radius: 3px; content: 'This 👉'; }\nbody.undiscord-pick-message.before [id^=\"message-content-\"]:hover::after { content: 'Before 👆'; }\nbody.undiscord-pick-message.after [id^=\"message-content-\"]:hover::after { content: 'After 👇'; }\n",u={grab(C){return new Promise((D,E)=>{document.body.classList.add("undiscord-pick-message");if(C)document.body.classList.add(C);function F(G){const H=G.target.closest("[id^=\"message-content-\"]");if(H){G.preventDefault();G.stopPropagation();G.stopImmediatePropagation();if(C)document.body.classList.remove(C);document.body.classList.remove("undiscord-pick-message");document.removeEventListener("click",F,!0);try{D(H.id.match(/message-content-(\d+)/)[1])}catch(I){D(null)}}}document.addEventListener("click",F,!0)})}};async function v(){try{const C=await b.awaitStore("UserStore");return C.getCurrentUser().id}catch(C){g.error("Failed to get current user ID from UserStore, trying localStorage",C);const D=document.createElement("iframe");D.style.display="none";document.body.appendChild(D);let E=null;try{const F=D.contentWindow.localStorage;E=JSON.parse(F.user_id_cache)}catch(F){g.warn("Failed to get authorId from localStorage via iframe",F)}finally{D.remove()}if(!E)g.error("Completely failed to get Author ID.");return E}}async function w(){try{const C=await b.awaitStore("SelectedGuildStore");return C.getGuildId()||"@me"}catch(C){g.error("Failed to get guild ID from SelectedGuildStore, trying URL",C);const D=location.href.match(/channels\/([\w@]+)\/(\d+)/);if(D)return D[1];g.error("Completely failed to get Guild ID.");return null}}async function x(){try{const C=await b.awaitStore("SelectedChannelStore");return C.getChannelId()}catch(C){g.error("Failed to get channel ID from SelectedChannelStore, trying URL",C);const D=location.href.match(/channels\/([\w@]+)\/(\d+)/);if(D)return D[2];g.error("Completely failed to get Channel ID.");return null}}const y=new ra(),z={undiscordWindow:null,undiscordBtn:null,logArea:null,autoScroll:null,trimLog:null,progressMain:null,progressIcon:null,percent:null},A=(C)=>z.undiscordWindow.querySelector(C);let B=null;function za(){const C=qa(ia,{VERSION:ba,HOME:ca,WIKI:da});z.undiscordWindow=xa(C);document.body.appendChild(z.undiscordWindow);new wa({elm:z.undiscordWindow,moveHandle:A(".header")});z.undiscordBtn=xa(ha);z.undiscordBtn.onclick=F;function D(){const H=document.querySelector("#app-mount [class^=toolbar]");if(H&&!H.contains(z.undiscordBtn))H.appendChild(z.undiscordBtn);else if(!H)g.warn("Could not find toolbar to mount Undiscord button.")}D();const E=document.querySelector("#app-mount");if(E)B=new MutationObserver(()=>{if(!E.contains(z.undiscordBtn))D()}),B.observe(E,{childList:!0,subtree:!0});function F(){if(z.undiscordWindow.style.display!=="none")z.undiscordWindow.style.display="none",z.undiscordBtn.style.color="var(--interactive-normal)";else z.undiscordWindow.style.display="",z.undiscordBtn.style.color="var(--interactive-active)"}z.logArea=A("#logArea");z.autoScroll=A("#autoScroll");z.trimLog=A("#trimLog");z.progressMain=A("#progressBar");z.progressIcon=z.undiscordBtn.querySelector("progress");z.percent=A("#progressPercent");A("#hide").onclick=F;A("#toggleSidebar").onclick=()=>z.undiscordWindow.classList.toggle("hide-sidebar");A("button#start").onclick=Ca;A("button#stop").onclick=Da;A("button#clear").onclick=()=>z.logArea.innerHTML="";A("button#getAuthor").onclick=async()=>{const H=await v();if(H)A("input#authorId").value=H};A("button#getGuild").onclick=async()=>{const H=await w();if(H)A("input#guildId").value=H;if(H==="@me"){const I=await x();if(I)A("input#channelId").value=I}};A("button#getChannel").onclick=async()=>{const H=await x();if(H)A("input#channelId").value=H;const I=await w();if(I)A("input#guildId").value=I};A("#redact").onchange=()=>{const H=z.undiscordWindow.classList.toggle("redact");if(H)alert("This mode will attempt to hide personal information, so you can screen share / take screenshots.\nAlways double check you are not sharing sensitive information!")};A("#pickMessageAfter").onclick=async()=>{alert("Select a message on the chat.\nThe message below it will be deleted.");F();const H=await u.grab("after");if(H)A("input#minId").value=H;F()};A("#pickMessageBefore").onclick=async()=>{alert("Select a message on the chat.\nThe message above it will be deleted.");F();const H=await u.grab("before");if(H)A("input#maxId").value=H;F()};A("input#searchDelay").onchange=(H)=>{const I=parseInt(H.target.value);if(I)y.options.searchDelay=I};A("input#searchDelay").oninput=(H)=>A("div#searchDelayValue").textContent=H.target.value+"ms";A("input#deleteDelay").onchange=(H)=>{const I=parseInt(H.target.value);if(I)y.options.deleteDelay=I};A("input#deleteDelay").oninput=(H)=>A("div#deleteDelayValue").textContent=H.target.value+"ms";A("input#rateLimitPrevention").onchange=(H)=>{y.options.rateLimitPrevention=H.target.checked??!1};A("div#searchDelayValue").textContent=A("input#searchDelay").value+"ms";A("div#deleteDelayValue").textContent=A("input#deleteDelay").value+"ms";const G=A("input#importJsonInput");G.onchange=async()=>{const H=G.files;if(H.length===0)return g.warn("No file selected.");const I=A("input#channelId"),J=A("input#guildId");J.value="null";const K=await v();if(K)A("input#authorId").value=K;try{const L=H[0],M=await L.text(),N=JSON.parse(M),O=Object.keys(N);I.value=O.join(",");g.info(`Loaded ${O.length} channels from archive index.`)}catch(L){g.error("Error parsing file!",L)}};ja(Aa);Ba()}function Aa(C="",D){z.logArea.insertAdjacentHTML("beforeend",`<div class="log log-${C}">${Array.from(D).map((E)=>typeof E==="object"?JSON.stringify(E,E instanceof Error&&Object.getOwnPropertyNames(E)):E).join("	")}</div>`);if(z.trimLog.checked){const E=500,F=z.logArea.querySelectorAll(".log");if(F.length>E)for(let G=0;G<F.length-E;G++)F[G].remove()}if(z.autoScroll.checked)z.logArea.querySelector("div:last-child").scrollIntoView(!1);if(C==="error")console.error(e,...Array.from(D))}function Ba(){y.onStart=(C,D)=>{a([e,"onStart:",C,D]),A("button#start").disabled=!0,A("button#stop").disabled=!1,z.undiscordBtn.classList.add("running"),z.progressMain.style.display="block",z.percent.style.display="block"},y.onProgress=(C,D)=>{let E=C.grandTotal;const F=C.delCount+C.failCount;E=Math.max(E,F,0);const G=F>=0&&E?Math.round(F/E*100)+"%":"",H=j(Date.now()-D.startTime.getTime()),I=j(D.etr);z.percent.innerHTML=`${G} (${F}/${E}) Elapsed: ${H} Remaining: ${I}`;z.progressIcon.value=F;z.progressMain.value=F;if(E)z.progressIcon.setAttribute("max",E),z.progressMain.setAttribute("max",E);else z.progressIcon.removeAttribute("value"),z.progressMain.removeAttribute("value"),z.percent.innerHTML="...";const J=A("input#searchDelay");J.value=y.options.searchDelay;A("div#searchDelayValue").textContent=y.options.searchDelay+"ms";const K=A("input#deleteDelay");K.value=y.options.deleteDelay;A("div#deleteDelayValue").textContent=y.options.deleteDelay+"ms"},y.onStop=(C,D)=>{a([e,"onStop:",C,D]),A("button#start").disabled=!1,A("button#stop").disabled=!0,z.undiscordBtn.classList.remove("running"),z.progressMain.style.display="none",z.percent.style.display="none"}}async function Ca(){a([e,"startAction"]);const C=A("input#authorId").value.trim(),D=A("input#guildId").value.trim(),E=A("input#channelId").value.trim().split(/\s*,\s*/),F=A("input#includeNsfw").checked,G=A("input#includeServers").checked,H=A("input#search").value.trim(),I=A("input#hasLink").checked,J=A("input#hasFile").checked,K=A("input#includePinned").checked,L=A("input#pattern").value,M=A("input#minId").value.trim(),N=A("input#maxId").value.trim(),O=A("input#minDate").value.trim(),P=A("input#maxDate").value.trim(),Q=parseInt(A("input#searchDelay").value.trim()),R=parseInt(A("input#deleteDelay").value.trim()),S=A("input#rateLimitPrevention").checked;if(!D&&E.join("").trim()==="")return g.error("You must fill the \"Server ID\" or \"Channel ID\" field!");if(D==="null"&&E.join("").trim()==="")return g.error("For archive wipe, \"Channel ID\" field must be filled from imported JSON (or manually)!");z.logArea.innerHTML="";y.resetState();y.options={...y.options,authorId:C,guildId:D==="null"?null:D,channelId:E.length===1?E[0]:void 0,minId:M||O,maxId:N||P,content:H,hasLink:I,hasFile:J,includeNsfw:F,includeServers:G,includePinned:K,pattern:L,searchDelay:Q,deleteDelay:R,rateLimitPrevention:S};if(E.length>1||D==="null"&&E.length>0&&E[0].includes(",")){const T=D==="null"&&E.length===1?E[0].split(/\s*,\s*/):E,U=T.filter((V)=>V.trim()!=="").map((V)=>({guildId:D==="null"?null:D,channelId:V.trim()}));if(U.length===0){g.error("No valid channel IDs to process for batch operation.");return}try{await y.runBatch(U)}catch(V){g.error("CoreException (batch)",V)}}else try{await y.run()}catch(T){g.error("CoreException (single)",T),y.stop()}}function Da(){a([e,"stopAction"]),y.stop()}function Ea(){a("Undiscord Plugin loading..."),la(),d.scoped.ui.injectCss(ea),d.scoped.ui.injectCss(fa),d.scoped.ui.injectCss(ga),d.scoped.ui.injectCss(ya),za(),a("Undiscord Plugin loaded successfully!")}function Fa(){a("Undiscord Plugin unloading...");if(y&&y.state.running)y.stop();if(z.undiscordBtn&&z.undiscordBtn.parentElement)z.undiscordBtn.remove();if(z.undiscordWindow&&z.undiscordWindow.parentElement)z.undiscordWindow.remove();if(B)B.disconnect(),B=null;ma();a("Undiscord Plugin unloaded.")}exports.onLoad=Ea;exports.onUnload=Fa;return exports})({});